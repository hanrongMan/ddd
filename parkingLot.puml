@startuml


Class ParkingBoy << Entity >> {
  List<ParkingLot> parkingLots
  FindParkingLotStrategy findParkingLotStrategy

  + void setParkingLots (ParkingLot[] parkingLots)
  + ParkingLot[] getParkingLots()
}

class ParkingLot << Entity >> {
  int capacity
  Map <Ticket, Car> parkedCars

  + Ticket park(Car car)
  + Car take(Ticket ticket)
}

Class Car << Value Object >> {
    PlateNumber plateNumber
}

Class Ticket << Value Object >> {
  + Boolean validate()
}

class FindParkingLotService {
ParkingLot findParkingLot(ParkingBoy parkingBoy)
}

class ParkCarService{
+ Ticket parkCar(ParkingLot parkingLot,Car car)
}

abstract class FindParkingLotStrategy {
abstract ParkingLot find(ParkingLot[] parkingLots)
}

Class SortedFindParkingLot{
+ParkingLot find(ParkingLot[] parkingLots)
}

Class SpaceMaxFindParkingLot{
+ParkingLot find(ParkingLot[] parkingLots)
}

FindParkingLotStrategy  <|.. SortedFindParkingLot
FindParkingLotStrategy  <|.. SpaceMaxFindParkingLot

Ticket "1" *--> "1" Car
ParkingLot "1" o--> "0..many" Ticket
ParkingBoy "1" o--> "0..many" ParkingLot
ParkingBoy "1" o--> "1" FindParkingLotStrategy
@enduml